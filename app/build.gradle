apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId "com.ducktapedapps.updoot"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.3"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        debug {
            buildConfigField 'String', "CLIENT_ID", UPDOOT_CLIENT_ID
            buildConfigField 'String', "REDIRECT_URI", UPDOOT_REDIRECT_URI
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', "CLIENT_ID", UPDOOT_CLIENT_ID
            buildConfigField 'String', "REDIRECT_URI", UPDOOT_REDIRECT_URI
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildFeatures {
        compose = true
        viewBinding = true
    }

    viewBinding {
        enabled true
    }

    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
}
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += [
                "-Xopt-in=kotlinx.coroutines.FlowPreview",
                "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi",
                "-Xopt-in=androidx.compose.material.ExperimentalMaterialApi",
                "-Xopt-in=androidx.compose.foundation.ExperimentalFoundationApi"
        ]
    }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //android support libs
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation "androidx.fragment:fragment-ktx:1.3.6"

    //compose stuff
    implementation "androidx.compose.runtime:runtime:$compose_version"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.foundation:foundation-layout:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.foundation:foundation:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"

    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.0-beta02"

    //android lifecycle
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha07"

    //kotlin-coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'

    //persistence
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    implementation "androidx.datastore:datastore-preferences:$dataStore_version"

    //workManager for deferred work
    implementation "androidx.work:work-runtime-ktx:$work_manager_version"

    //moshi for Json
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    //image loading
    //coil
    implementation "io.coil-kt:coil:1.3.2"
    implementation "io.coil-kt:coil-compose:1.3.2"

    //glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    //photoview
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'

    //video loading
    implementation "com.google.android.exoplayer:exoplayer:$exoPlayer_version"

    //hilt for di
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    implementation "androidx.hilt:hilt-common:$hilt_jetpack_version"
    implementation "androidx.hilt:hilt-work:$hilt_jetpack_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_jetpack_version"

    //web-page parser for extracting link metadata
    implementation "org.jsoup:jsoup:$jsoup_version"


    //leak canary for detecting memory leaks
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'

    //testing
    testImplementation 'junit:junit:4.13.1'
    testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlin_coroutines"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines"
}
